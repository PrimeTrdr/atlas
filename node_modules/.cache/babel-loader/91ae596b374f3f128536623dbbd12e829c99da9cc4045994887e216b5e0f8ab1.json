{"ast":null,"code":"var _jsxFileName = \"/Users/fernando/Downloads/atlas-token/src/components/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = ({\n  onLogin\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError('');\n\n    // Validación básica\n    if (!email || !password) {\n      setError('Please fill in all fields');\n      return;\n    }\n    if (!isLogin && password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    if (!isLogin) {\n      // Simulación de registro\n      localStorage.setItem('atlas_users', JSON.stringify([...JSON.parse(localStorage.getItem('atlas_users') || '[]'), {\n        email,\n        password,\n        // En una app real, nunca almacenar contraseñas en texto plano\n        referralCode: generateReferralCode(),\n        referrals: [],\n        tokens: 100,\n        // Tokens iniciales\n        withdrawals: []\n      }]));\n      setIsLogin(true);\n      setEmail('');\n      setPassword('');\n      setConfirmPassword('');\n      alert('Registration successful! Please log in.');\n    } else {\n      // Simulación de login\n      const users = JSON.parse(localStorage.getItem('atlas_users') || '[]');\n      const user = users.find(u => u.email === email && u.password === password);\n      if (user) {\n        localStorage.setItem('atlas_current_user', JSON.stringify(user));\n        onLogin(user);\n      } else {\n        setError('Invalid email or password');\n      }\n    }\n  };\n  const generateReferralCode = () => {\n    return 'ATLAS' + Math.random().toString(36).substring(2, 8).toUpperCase();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"auth-title\",\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"auth-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Enter your email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Enter your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            placeholder: \"Confirm your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"auth-button\",\n          children: isLogin ? 'Login' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-toggle\",\n        children: isLogin ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsLogin(false),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsLogin(true),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"r7jcPz7uxwNxs29Y27WbYV4nb8w=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Auth","onLogin","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","handleSubmit","e","preventDefault","localStorage","setItem","JSON","stringify","parse","getItem","referralCode","generateReferralCode","referrals","tokens","withdrawals","alert","users","user","find","u","Math","random","toString","substring","toUpperCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/Users/fernando/Downloads/atlas-token/src/components/Auth.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Auth = ({ onLogin }) => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError('');\n\n    // Validación básica\n    if (!email || !password) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    if (!isLogin && password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    if (!isLogin) {\n      // Simulación de registro\n      localStorage.setItem('atlas_users', JSON.stringify([\n        ...(JSON.parse(localStorage.getItem('atlas_users') || '[]')),\n        {\n          email,\n          password, // En una app real, nunca almacenar contraseñas en texto plano\n          referralCode: generateReferralCode(),\n          referrals: [],\n          tokens: 100, // Tokens iniciales\n          withdrawals: []\n        }\n      ]));\n      setIsLogin(true);\n      setEmail('');\n      setPassword('');\n      setConfirmPassword('');\n      alert('Registration successful! Please log in.');\n    } else {\n      // Simulación de login\n      const users = JSON.parse(localStorage.getItem('atlas_users') || '[]');\n      const user = users.find(u => u.email === email && u.password === password);\n      \n      if (user) {\n        localStorage.setItem('atlas_current_user', JSON.stringify(user));\n        onLogin(user);\n      } else {\n        setError('Invalid email or password');\n      }\n    }\n  };\n\n  const generateReferralCode = () => {\n    return 'ATLAS' + Math.random().toString(36).substring(2, 8).toUpperCase();\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-card\">\n        <h2 className=\"auth-title\">{isLogin ? 'Login' : 'Register'}</h2>\n        \n        {error && <div className=\"auth-error\">{error}</div>}\n        \n        <form onSubmit={handleSubmit} className=\"auth-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Enter your email\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter your password\"\n              required\n            />\n          </div>\n          \n          {!isLogin && (\n            <div className=\"form-group\">\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\n              <input\n                type=\"password\"\n                id=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                placeholder=\"Confirm your password\"\n                required\n              />\n            </div>\n          )}\n          \n          <button type=\"submit\" className=\"auth-button\">\n            {isLogin ? 'Login' : 'Register'}\n          </button>\n        </form>\n        \n        <div className=\"auth-toggle\">\n          {isLogin ? (\n            <p>Don't have an account? <button onClick={() => setIsLogin(false)}>Register</button></p>\n          ) : (\n            <p>Already have an account? <button onClick={() => setIsLogin(true)}>Login</button></p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMgB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACA,IAAI,CAACP,KAAK,IAAI,CAACE,QAAQ,EAAE;MACvBK,QAAQ,CAAC,2BAA2B,CAAC;MACrC;IACF;IAEA,IAAI,CAACT,OAAO,IAAII,QAAQ,KAAKE,eAAe,EAAE;MAC5CG,QAAQ,CAAC,wBAAwB,CAAC;MAClC;IACF;IAEA,IAAI,CAACT,OAAO,EAAE;MACZ;MACAa,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAAC,CACjD,GAAID,IAAI,CAACE,KAAK,CAACJ,YAAY,CAACK,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAAE,EAC5D;QACEhB,KAAK;QACLE,QAAQ;QAAE;QACVe,YAAY,EAAEC,oBAAoB,CAAC,CAAC;QACpCC,SAAS,EAAE,EAAE;QACbC,MAAM,EAAE,GAAG;QAAE;QACbC,WAAW,EAAE;MACf,CAAC,CACF,CAAC,CAAC;MACHtB,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;MACfE,kBAAkB,CAAC,EAAE,CAAC;MACtBiB,KAAK,CAAC,yCAAyC,CAAC;IAClD,CAAC,MAAM;MACL;MACA,MAAMC,KAAK,GAAGV,IAAI,CAACE,KAAK,CAACJ,YAAY,CAACK,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC;MACrE,MAAMQ,IAAI,GAAGD,KAAK,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC1B,KAAK,KAAKA,KAAK,IAAI0B,CAAC,CAACxB,QAAQ,KAAKA,QAAQ,CAAC;MAE1E,IAAIsB,IAAI,EAAE;QACRb,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAEC,IAAI,CAACC,SAAS,CAACU,IAAI,CAAC,CAAC;QAChE5B,OAAO,CAAC4B,IAAI,CAAC;MACf,CAAC,MAAM;QACLjB,QAAQ,CAAC,2BAA2B,CAAC;MACvC;IACF;EACF,CAAC;EAED,MAAMW,oBAAoB,GAAGA,CAAA,KAAM;IACjC,OAAO,OAAO,GAAGS,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC3E,CAAC;EAED,oBACErC,OAAA;IAAKsC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BvC,OAAA;MAAKsC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBvC,OAAA;QAAIsC,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEnC,OAAO,GAAG,OAAO,GAAG;MAAU;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAE/D/B,KAAK,iBAAIZ,OAAA;QAAKsC,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAE3B;MAAK;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEnD3C,OAAA;QAAM4C,QAAQ,EAAE9B,YAAa;QAACwB,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACjDvC,OAAA;UAAKsC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBvC,OAAA;YAAO6C,OAAO,EAAC,OAAO;YAAAN,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpC3C,OAAA;YACE8C,IAAI,EAAC,OAAO;YACZC,EAAE,EAAC,OAAO;YACVC,KAAK,EAAE1C,KAAM;YACb2C,QAAQ,EAAGlC,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;YAC1CG,WAAW,EAAC,kBAAkB;YAC9BC,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN3C,OAAA;UAAKsC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBvC,OAAA;YAAO6C,OAAO,EAAC,UAAU;YAAAN,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1C3C,OAAA;YACE8C,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,UAAU;YACbC,KAAK,EAAExC,QAAS;YAChByC,QAAQ,EAAGlC,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;YAC7CG,WAAW,EAAC,qBAAqB;YACjCC,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EAEL,CAACvC,OAAO,iBACPJ,OAAA;UAAKsC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBvC,OAAA;YAAO6C,OAAO,EAAC,iBAAiB;YAAAN,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzD3C,OAAA;YACE8C,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,iBAAiB;YACpBC,KAAK,EAAEtC,eAAgB;YACvBuC,QAAQ,EAAGlC,CAAC,IAAKJ,kBAAkB,CAACI,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;YACpDG,WAAW,EAAC,uBAAuB;YACnCC,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,eAED3C,OAAA;UAAQ8C,IAAI,EAAC,QAAQ;UAACR,SAAS,EAAC,aAAa;UAAAC,QAAA,EAC1CnC,OAAO,GAAG,OAAO,GAAG;QAAU;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEP3C,OAAA;QAAKsC,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzBnC,OAAO,gBACNJ,OAAA;UAAAuC,QAAA,GAAG,yBAAuB,eAAAvC,OAAA;YAAQqD,OAAO,EAAEA,CAAA,KAAMhD,UAAU,CAAC,KAAK,CAAE;YAAAkC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEzF3C,OAAA;UAAAuC,QAAA,GAAG,2BAAyB,eAAAvC,OAAA;YAAQqD,OAAO,EAAEA,CAAA,KAAMhD,UAAU,CAAC,IAAI,CAAE;YAAAkC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACvF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxC,EAAA,CAvHIF,IAAI;AAAAqD,EAAA,GAAJrD,IAAI;AAyHV,eAAeA,IAAI;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}